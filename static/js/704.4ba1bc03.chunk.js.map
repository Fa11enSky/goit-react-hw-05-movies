{"version":3,"file":"static/js/704.4ba1bc03.chunk.js","mappings":"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","sources":["components/Backdrop/Backdrop.jsx","components/Loader/Loader.jsx","components/MovieItem/MovieItem.Styled.js","webpack://react-homework-template/./src/components/MovieItem/style.module.css?8085","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SeearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nconst BackDrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport default BackDrop;\n","import BackDrop from 'components/Backdrop/Backdrop';\nimport { InfinitySpin } from 'react-loader-spinner';\nconst Loader = () => {\n  return (\n    <BackDrop>\n      <InfinitySpin width=\"200\" color=\"#a9584d\" />\n    </BackDrop>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\nconst MovieItemStyled = styled.div`\n  backdrop-filter: blur(16px) saturate(180%);\n  -webkit-backdrop-filter: blur(16px) saturate(180%);\n  background-color: rgba(17, 25, 40, 0.25);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.125);\n  padding: 38px;\n  filter: drop-shadow(0 30px 10px rgba(0, 0, 0, 0.125));\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  max-width: 450px;\n  &:hover {\n    box-shadow: 0 0 19px rgba(33, 33, 33, 0.2);\n    scale: 0.99;\n  }\n  transition: all 250ms linear;\n`;\nexport default MovieItemStyled;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"style_header__PiJnG\",\"thumb\":\"style_thumb__JgdSN\"};","import MovieItemStyled from './MovieItem.Styled';\nimport css from './style.module.css';\nconst { Link } = require('react-router-dom');\n\nfunction MovieItem({ movie, location }) {\n  return (\n    <li>\n      <Link style={{ textDecoration: 'none' }} to={`/movies/${movie.id}`} state={{from:location}}>\n        <MovieItemStyled>\n          <h1 className={css.header}> {movie.title}</h1>\n          <div className={css.thumb}>\n            {movie.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2/${movie.poster_path}`}\n                alt={`${movie.title} poster`}\n              />\n            ) : (\n              <img\n                style={{ height: '450px' }}\n                alt=\"dont have poster\"\n                src=\"https://usagif.com/wp-content/uploads/2021/4fh5wi/pepefrg-4.gif\"\n                height=\"450\"\n              />\n            )}\n          </div>\n        </MovieItemStyled>\n      </Link>\n    </li>\n  );\n}\nexport default MovieItem;\n","import MovieItem from \"components/MovieItem/MovieItem\";\nconst MovieList = ({ movies,location }) => {\n  return (\n    <ul\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '10px',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {movies.map(el => {\n            return <MovieItem key={el.id} movie={el} location={location} />;\n          })}\n    </ul>\n  );\n};\nexport default MovieList;\n","const SearchForm = ({handleSubmit}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Search film\n        <input type=\"text\" name=\"filmName\" />\n      </label>\n      <button type=\"submit\"> Search</button>\n    </form>\n  );\n};\nexport default SearchForm;\n","import SearchForm from 'components/SearchForm/SeearchForm';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams,useLocation } from 'react-router-dom';\nimport { searchMovie } from 'sercvice/getFilmList';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n  useEffect(() => {\n    if(!query) return\n      setIsLoading(true);\n      searchMovie(query)\n        .then(response => response.json())\n        .then(data => {\n          if (data.results.length > 0) {\n            setIsEmpty(false);\n            setMovies(data.results);\n            return;\n          }\n          setIsEmpty(true);\n        })\n        .catch(err => console.log(err))\n        .finally(() => setIsLoading(false));\n    \n  }, [ query, isEmpty]);\n  const updateQueryString = name => {\n    const nextName = name !== '' ? { query: name } : {};\n    setSearchParams(nextName);\n  };\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const filmName = ev.target.elements.filmName.value;\n    setMovies([]);\n    updateQueryString(filmName);\n  };\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <SearchForm handleSubmit={handleSubmit} />\n      <MovieList movies={movies} location={location} />\n        \n      {isEmpty && <div>VOID</div>}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","BackDrop","children","InfinitySpin","width","color","Link","require","_ref","movie","location","style","textDecoration","to","concat","id","state","from","_jsxs","MovieItemStyled","className","css","title","poster_path","src","alt","height","movies","display","flexWrap","gap","alignItems","justifyContent","map","el","MovieItem","handleSubmit","onSubmit","type","name","Movies","setMovies","useState","isEmpty","setIsEmpty","isLoading","setIsLoading","searchParams","setSearchParams","useSearchParams","query","get","useLocation","useEffect","searchMovie","then","response","json","data","results","length","catch","err","console","log","finally","SearchForm","ev","preventDefault","filmName","target","elements","value","MovieList"],"sourceRoot":""}