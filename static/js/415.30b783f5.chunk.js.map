{"version":3,"file":"static/js/415.30b783f5.chunk.js","mappings":"gKACA,MAYA,E,OAZiBA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yN,sBCC3B,MAOA,EAPeC,KAEXC,EAAAA,EAAAA,KAACC,EAAQ,CAAAC,UACPF,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAACC,MAAM,MAAMC,MAAM,a,gDCJtC,MAoBA,E,OApBwBT,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qjBCAlC,EAAyB,sBAAzB,EAAuD,qB,aCCvD,MAAM,KAAEQ,EAAI,YAAEC,GAAgBC,EAAQ,IA+BtC,QA7BA,SAAkBC,GAAa,IAAZ,MAAEC,GAAOD,EAC1B,MAAME,EAAWJ,IAIjB,OACEP,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACM,EAAI,CACHM,MAAO,CAAEC,eAAgB,QACzBC,GAAE,WAAAC,OAAaL,EAAMM,IACrBC,MAAO,CAAEC,KAAMP,GAAWT,UAE1BiB,EAAAA,EAAAA,MAACC,EAAe,CAAAlB,SAAA,EACdiB,EAAAA,EAAAA,MAAA,MAAIE,UAAWC,EAAWpB,SAAA,CAAC,IAAEQ,EAAMa,UACnCvB,EAAAA,EAAAA,KAAA,OAAKqB,UAAWC,EAAUpB,UACxBF,EAAAA,EAAAA,KAAA,OACEwB,IACEd,EAAMe,YAAW,mDAAAV,OACsCL,EAAMe,aAfzE,kEAkBUC,IAAG,GAAAX,OAAKL,EAAMa,MAAK,qBAOjC,ECdA,EAjBkBd,IAAiB,IAAhB,OAAEkB,GAAQlB,EAC3B,OACET,EAAAA,EAAAA,KAAA,MACEY,MAAO,CACLgB,QAAS,OACTC,SAAU,OACVC,IAAK,OACLC,WAAY,SACZC,eAAgB,UAChB9B,SAEDyB,EAAOM,KAAIC,IACClC,EAAAA,EAAAA,KAACmC,EAAS,CAAazB,MAAOwB,GAAdA,EAAGlB,OAE7B,C,wGCVT,MAwCA,EAxCaoB,KACX,MAAMzB,GAAWJ,EAAAA,EAAAA,OACV8B,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAC1CK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,GAsBvC,OArBAO,EAAAA,EAAAA,YAAU,KACRL,GAAa,IACbM,EAAAA,EAAAA,WACGC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,IAAqB,IAAjBA,EAAKC,QACP,MAAM,IAAIC,MAAMF,EAAKG,gBAGvB,OADAT,GAAW,GACJM,EAAKI,OAAO,IAEpBP,MAAKX,IACJC,EAASD,EAAM,IAEhBmB,OAAMC,IACLZ,GAAW,GACXF,EAAgBc,EAAIC,QAAQ,IAE7BC,SAAQ,IAAMlB,GAAa,IAAO,GACpC,KAGDtB,EAAAA,EAAAA,MAAA,OAAAjB,SAAA,EACEF,EAAAA,EAAAA,KAAA,MACEY,MAAO,CAAEgD,SAAU,OAAQC,UAAW,SAAUC,aAAc,QAAS5D,SACxE,mBAGAsC,IAAaxC,EAAAA,EAAAA,KAACD,EAAAA,EAAM,IAEpB6C,GAAU5C,EAAAA,EAAAA,KAAA,MAAAE,SAAKwC,KAAqB1C,EAAAA,EAAAA,KAAC+D,EAAAA,EAAS,CAACpC,OAAQU,EAAO1B,SAAUA,MACrE,C","sources":["components/Backdrop/Backdrop.jsx","components/Loader/Loader.jsx","components/MovieItem/MovieItem.Styled.js","webpack://react-homework-template/./src/components/MovieItem/style.module.css?8085","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nconst BackDrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport default BackDrop;\n","import BackDrop from 'components/Backdrop/Backdrop';\nimport { InfinitySpin } from 'react-loader-spinner';\nconst Loader = () => {\n  return (\n    <BackDrop>\n      <InfinitySpin width=\"200\" color=\"#a9584d\" />\n    </BackDrop>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\nconst MovieItemStyled = styled.div`\n  backdrop-filter: blur(16px) saturate(180%);\n  -webkit-backdrop-filter: blur(16px) saturate(180%);\n  background-color: rgba(17, 25, 40, 0.25);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.125);\n  padding: 38px;\n  filter: drop-shadow(0 30px 10px rgba(0, 0, 0, 0.125));\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  max-width: 450px;\n  &:hover {\n    box-shadow: 0 0 19px rgba(33, 33, 33, 0.2);\n    scale: 0.99;\n  }\n  transition: all 250ms linear;\n`;\nexport default MovieItemStyled;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"style_header__PiJnG\",\"thumb\":\"style_thumb__JgdSN\"};","import MovieItemStyled from './MovieItem.Styled';\nimport css from './style.module.css';\nconst { Link, useLocation } = require('react-router-dom');\n\nfunction MovieItem({ movie }) {\n  const location = useLocation();\n  const defaultImage =\n    'https://usagif.com/wp-content/uploads/2021/4fh5wi/pepefrg-4.gif';\n\n  return (\n    <li>\n      <Link\n        style={{ textDecoration: 'none' }}\n        to={`/movies/${movie.id}`}\n        state={{ from: location }}\n      >\n        <MovieItemStyled>\n          <h1 className={css.header}> {movie.title}</h1>\n          <div className={css.thumb}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w600_and_h900_bestv2/${movie.poster_path}`\n                  : defaultImage\n              }\n              alt={`${movie.title} poster`}\n            />\n          </div>\n        </MovieItemStyled>\n      </Link>\n    </li>\n  );\n}\nexport default MovieItem;\n","import MovieItem from \"components/MovieItem/MovieItem\";\nconst MovieList = ({ movies }) => {\n  return (\n    <ul\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '10px',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {movies.map(el => {\n            return <MovieItem key={el.id} movie={el}  />;\n          })}\n    </ul>\n  );\n};\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport getFilms from 'sercvice/getFilmList';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { useLocation } from 'react-router-dom';\nconst Home = () => {\n  const location = useLocation();\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isEmpty, setIsEmpty] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    getFilms()\n      .then(response => response.json())\n      .then(data => {\n        if (data.success === false) {\n          throw new Error(data.status_message);\n        }\n        setIsEmpty(false);\n        return data.results;\n      })\n      .then(films => {\n        setFilms(films);\n      })\n      .catch(err => {\n        setIsEmpty(true);\n        setErrorMessage(err.message);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div>\n      <h1\n        style={{ fontSize: '70px', textAlign: 'center', marginBottom: '30px' }}\n      >\n        Trending today\n      </h1>\n      {isLoading && <Loader />}\n\n      {isEmpty ? <h1>{errorMessage}</h1> : <MovieList movies={films} location={location} />}\n    </div>\n  );\n};\nexport default Home;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","BackDrop","children","InfinitySpin","width","color","Link","useLocation","require","_ref","movie","location","style","textDecoration","to","concat","id","state","from","_jsxs","MovieItemStyled","className","css","title","src","poster_path","alt","movies","display","flexWrap","gap","alignItems","justifyContent","map","el","MovieItem","Home","films","setFilms","useState","isLoading","setIsLoading","errorMessage","setErrorMessage","isEmpty","setIsEmpty","useEffect","getFilms","then","response","json","data","success","Error","status_message","results","catch","err","message","finally","fontSize","textAlign","marginBottom","MovieList"],"sourceRoot":""}