{"version":3,"file":"static/js/704.d238d87c.chunk.js","mappings":"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","sources":["components/Backdrop/Backdrop.jsx","components/Loader/Loader.jsx","components/MovieItem/MovieItem.Styled.js","webpack://react-homework-template/./src/components/MovieItem/style.module.css?8085","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SeearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nconst BackDrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport default BackDrop;\n","import BackDrop from 'components/Backdrop/Backdrop';\nimport { InfinitySpin } from 'react-loader-spinner';\nconst Loader = () => {\n  return (\n    <BackDrop>\n      <InfinitySpin width=\"200\" color=\"#a9584d\" />\n    </BackDrop>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\nconst MovieItemStyled = styled.div`\n  backdrop-filter: blur(16px) saturate(180%);\n  -webkit-backdrop-filter: blur(16px) saturate(180%);\n  background-color: rgba(17, 25, 40, 0.25);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.125);\n  padding: 38px;\n  filter: drop-shadow(0 30px 10px rgba(0, 0, 0, 0.125));\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  max-width: 450px;\n  &:hover {\n    box-shadow: 0 0 19px rgba(33, 33, 33, 0.2);\n    scale: 0.99;\n  }\n  transition: all 250ms linear;\n`;\nexport default MovieItemStyled;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"style_header__PiJnG\",\"thumb\":\"style_thumb__JgdSN\"};","import MovieItemStyled from './MovieItem.Styled';\nimport css from './style.module.css';\nconst { Link, useLocation } = require('react-router-dom');\n\nfunction MovieItem({ movie }) {\n  const location = useLocation();\n  const defaultImage =\n    'https://usagif.com/wp-content/uploads/2021/4fh5wi/pepefrg-4.gif';\n\n  return (\n    <li>\n      <Link\n        style={{ textDecoration: 'none' }}\n        to={`/movies/${movie.id}`}\n        state={{ from: location }}\n      >\n        <MovieItemStyled>\n          <h1 className={css.header}> {movie.title}</h1>\n          <div className={css.thumb}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w600_and_h900_bestv2/${movie.poster_path}`\n                  : defaultImage\n              }\n              alt={`${movie.title} poster`}\n            />\n          </div>\n        </MovieItemStyled>\n      </Link>\n    </li>\n  );\n}\nexport default MovieItem;\n","import MovieItem from \"components/MovieItem/MovieItem\";\nconst MovieList = ({ movies }) => {\n  return (\n    <ul\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '10px',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {movies.map(el => {\n            return <MovieItem key={el.id} movie={el}  />;\n          })}\n    </ul>\n  );\n};\nexport default MovieList;\n","const SearchForm = ({ setSearch }) => {\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const filmName = ev.target.elements.filmName.value;\n    if (filmName.length === 0) {\n      console.log('reject');\n      return;\n    }\n    const query = { query: filmName };\n    setSearch(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Search film\n        <input type=\"text\" name=\"filmName\" />\n      </label>\n      <button type=\"submit\"> Search</button>\n    </form>\n  );\n};\nexport default SearchForm;\n","import SearchForm from 'components/SearchForm/SeearchForm';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'sercvice/getFilmList';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  useEffect(() => {\n    if (!query) return;\n    setIsLoading(true);\n    searchMovie(query)\n      .then(response => response.json())\n      .then(data => {\n        if (data.results.length > 0) {\n          setIsEmpty(false);\n          setMovies(data.results);\n          return;\n        }\n        setIsEmpty(true);\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }, [query]);\n  // Цю штуку я бачив як робив Репета, але тільки після того як ви відправили на доопрацювання\n  // я допер що то по відношенню до слухача на інпуті а не на сабміт😁\n  // const updateQueryString = name => {\n  //   const nextName = name !== '' ? { query: name } : {};\n  //   setSearchParams(nextName);\n  // };\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <SearchForm setSearch={setSearchParams} />\n      <MovieList movies={movies} />\n\n      {isEmpty && <div>VOID</div>}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","BackDrop","children","InfinitySpin","width","color","Link","useLocation","require","_ref","movie","location","style","textDecoration","to","concat","id","state","from","_jsxs","MovieItemStyled","className","css","title","src","poster_path","alt","movies","display","flexWrap","gap","alignItems","justifyContent","map","el","MovieItem","setSearch","onSubmit","ev","preventDefault","filmName","target","elements","value","length","console","log","query","type","name","Movies","setMovies","useState","isEmpty","setIsEmpty","isLoading","setIsLoading","searchParams","setSearchParams","useSearchParams","get","useEffect","searchMovie","then","response","json","data","results","catch","err","finally","SearchForm","MovieList"],"sourceRoot":""}